"""add skymap tables

Revision ID: 144b4963a35d
Revises: fb0304aeca6c
Create Date: 2021-06-11 09:56:53.577918

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '144b4963a35d'
down_revision = 'fb0304aeca6c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gcnevents',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dateobs', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dateobs')
    )
    op.create_index(op.f('ix_gcnevents_created_at'), 'gcnevents', ['created_at'], unique=False)
    op.create_table('gcnnotices',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ivorn', sa.String(), nullable=False, comment='Unique identifier of VOEvent'),
    sa.Column('notice_type', sa.Enum('GRB_COORDS', 'TEST_COORDS', 'IM_ALIVE', 'KILL_SOCKET', 'MAXBC', 'BRAD_COORDS', 'GRB_FINAL', 'HUNTS_SRC', 'ALEXIS_SRC', 'XTE_PCA_ALERT', 'XTE_PCA_SRC', 'XTE_ASM_ALERT', 'XTE_ASM_SRC', 'COMPTEL_SRC', 'IPN_RAW', 'IPN_SEG', 'SAX_WFC_ALERT', 'SAX_WFC_SRC', 'SAX_NFI_ALERT', 'SAX_NFI_SRC', 'XTE_ASM_TRANS', 'spare38', 'IPN_POS', 'HETE_ALERT_SRC', 'HETE_UPDATE_SRC', 'HETE_FINAL_SRC', 'HETE_GNDANA_SRC', 'HETE_TEST', 'GRB_CNTRPART', 'SWIFT_TOO_FOM', 'SWIFT_TOO_SC_SLEW', 'DOW_TOD', 'spare50', 'INTEGRAL_POINTDIR', 'INTEGRAL_SPIACS', 'INTEGRAL_WAKEUP', 'INTEGRAL_REFINED', 'INTEGRAL_OFFLINE', 'INTEGRAL_WEAK', 'AAVSO', 'MILAGRO_POS', 'KONUS_LC', 'SWIFT_BAT_GRB_ALERT', 'SWIFT_BAT_GRB_POS_ACK', 'SWIFT_BAT_GRB_POS_NACK', 'SWIFT_BAT_GRB_LC', 'SWIFT_BAT_SCALEDMAP', 'SWIFT_FOM_OBS', 'SWIFT_SC_SLEW', 'SWIFT_XRT_POSITION', 'SWIFT_XRT_SPECTRUM', 'SWIFT_XRT_IMAGE', 'SWIFT_XRT_LC', 'SWIFT_XRT_CENTROID', 'SWIFT_UVOT_DBURST', 'SWIFT_UVOT_FCHART', 'SWIFT_BAT_GRB_LC_PROC', 'SWIFT_XRT_SPECTRUM_PROC', 'SWIFT_XRT_IMAGE_PROC', 'SWIFT_UVOT_DBURST_PROC', 'SWIFT_UVOT_FCHART_PROC', 'SWIFT_UVOT_POS', 'SWIFT_BAT_GRB_POS_TEST', 'SWIFT_POINTDIR', 'SWIFT_BAT_TRANS', 'SWIFT_XRT_THRESHPIX', 'SWIFT_XRT_THRESHPIX_PROC', 'SWIFT_XRT_SPER', 'SWIFT_XRT_SPER_PROC', 'SWIFT_UVOT_POS_NACK', 'SWIFT_BAT_ALARM_SHORT', 'SWIFT_BAT_ALARM_LONG', 'SWIFT_UVOT_EMERGENCY', 'SWIFT_XRT_EMERGENCY', 'SWIFT_FOM_PPT_ARG_ERR', 'SWIFT_FOM_SAFE_POINT', 'SWIFT_FOM_SLEW_ABORT', 'SWIFT_BAT_QL_POS', 'SWIFT_BAT_SUB_THRESHOLD', 'SWIFT_BAT_SLEW_POS', 'AGILE_GRB_WAKEUP', 'AGILE_GRB_GROUND', 'AGILE_GRB_REFINED', 'SWIFT_ACTUAL_POINTDIR', 'AGILE_MCAL_ALERT', 'AGILE_POINTDIR', 'AGILE_TRANS', 'AGILE_GRB_POS_TEST', 'FERMI_GBM_ALERT', 'FERMI_GBM_FLT_POS', 'FERMI_GBM_GND_POS', 'FERMI_GBM_LC', 'FERMI_GBM_GND_INTERNAL', 'FERMI_GBM_FIN_POS', 'FERMI_GBM_ALERT_INTERNAL', 'FERMI_GBM_FLT_INTERNAL', 'FERMI_GBM_TRANS', 'FERMI_GBM_POS_TEST', 'FERMI_LAT_POS_INI', 'FERMI_LAT_POS_UPD', 'FERMI_LAT_POS_DIAG', 'FERMI_LAT_TRANS', 'FERMI_LAT_POS_TEST', 'FERMI_LAT_MONITOR', 'FERMI_SC_SLEW', 'FERMI_LAT_GND', 'FERMI_LAT_OFFLINE', 'FERMI_POINTDIR', 'SIMBADNED', 'FERMI_GBM_SUBTHRESH', 'SWIFT_BAT_MONITOR', 'MAXI_UNKNOWN', 'MAXI_KNOWN', 'MAXI_TEST', 'OGLE', 'CBAT', 'MOA', 'SWIFT_BAT_SUBSUB', 'SWIFT_BAT_KNOWN_SRC', 'VOE_11_IM_ALIVE', 'VOE_20_IM_ALIVE', 'FERMI_SC_SLEW_INTERNAL', 'COINCIDENCE', 'FERMI_GBM_FIN_INTERNAL', 'SUZAKU_LC', 'SNEWS', 'LVC_PRELIMINARY', 'LVC_INITIAL', 'LVC_UPDATE', 'LVC_TEST', 'LVC_COUNTERPART', 'AMON_ICECUBE_COINC', 'AMON_ICECUBE_HESE', 'CALET_GBM_FLT_LC', 'CALET_GBM_GND_LC', 'LVC_EARLY_WARNING', 'LVC_RETRACTION', 'GWHEN_COINC', 'AMON_ICECUBE_EHE', 'HAWC_BURST_MONITOR', 'AMON_NU_EM_COINC', 'ICECUBE_ASTROTRACK_GOLD', 'ICECUBE_ASTROTRACK_BRONZE', 'ICECUBE_CASCADE', name='noticetype'), nullable=False, comment='GCN Notice type'),
    sa.Column('stream', sa.String(), nullable=False, comment='Event stream or mission (i.e., "Fermi")'),
    sa.Column('date', sa.DateTime(), nullable=False, comment='UTC message timestamp'),
    sa.Column('dateobs', sa.DateTime(), nullable=False, comment='UTC event timestamp'),
    sa.Column('content', sa.LargeBinary(), nullable=False, comment='Raw VOEvent content'),
    sa.ForeignKeyConstraint(['dateobs'], ['gcnevents.dateobs'], ),
    sa.PrimaryKeyConstraint('id', 'ivorn')
    )
    op.create_index(op.f('ix_gcnnotices_created_at'), 'gcnnotices', ['created_at'], unique=False)
    op.create_table('gcntags',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dateobs', sa.DateTime(), nullable=False),
    sa.Column('text', sa.Unicode(), nullable=False),
    sa.ForeignKeyConstraint(['dateobs'], ['gcnevents.dateobs'], ),
    sa.PrimaryKeyConstraint('id', 'dateobs', 'text')
    )
    op.create_index(op.f('ix_gcntags_created_at'), 'gcntags', ['created_at'], unique=False)
    op.create_table('localizations',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dateobs', sa.DateTime(), nullable=False, comment='UTC event timestamp'),
    sa.Column('localization_name', sa.String(), nullable=False, comment='Localization name'),
    sa.Column('uniq', sa.ARRAY(sa.BigInteger()), nullable=False, comment='Multiresolution HEALPix UNIQ pixel index array'),
    sa.Column('probdensity', sa.ARRAY(sa.Float()), nullable=False, comment='Multiresolution HEALPix probability density array'),
    sa.Column('distmu', sa.ARRAY(sa.Float()), nullable=True, comment='Multiresolution HEALPix distance mu array'),
    sa.Column('distsigma', sa.ARRAY(sa.Float()), nullable=True, comment='Multiresolution HEALPix distance sigma array'),
    sa.Column('distnorm', sa.ARRAY(sa.Float()), nullable=True, comment='Multiresolution HEALPix distance normalization array'),
    sa.Column('contour', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='GeoJSON contours'),
    sa.ForeignKeyConstraint(['dateobs'], ['gcnevents.dateobs'], ),
    sa.PrimaryKeyConstraint('id', 'localization_name')
    )
    op.create_index(op.f('ix_localizations_created_at'), 'localizations', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_localizations_created_at'), table_name='localizations')
    op.drop_table('localizations')
    op.drop_index(op.f('ix_gcntags_created_at'), table_name='gcntags')
    op.drop_table('gcntags')
    op.drop_index(op.f('ix_gcnnotices_created_at'), table_name='gcnnotices')
    op.drop_table('gcnnotices')
    op.drop_index(op.f('ix_gcnevents_created_at'), table_name='gcnevents')
    op.drop_table('gcnevents')
    # ### end Alembic commands ###
